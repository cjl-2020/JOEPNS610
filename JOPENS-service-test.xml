<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jms="http://www.springframework.org/schema/jms" xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd"
  default-lazy-init="true">
  <context:property-placeholder location="classpath:jopens-config.properties" />
 
  <bean id="traceView" class="cn.org.gddsn.rts.view.TraceView">
    <property name="seedVolumeSSS" ref="seedVolumeSSS" />
    <property name="port" ref="sssPort" />
    <property name="maxSize" value="1024" />
    <property name="useSystemClock" value="true" />
    <property name="defaultTimeSpan" value="360" />
    <property name="defaultTrace" value="24" />
    <property name="displayChanInfo" value="true" />
    <property name="jmsTemplate" ref="jmsTemplate" />
    <property name="trigController" value="rts.trigController" />
    <property name="rtsOriginAlarm" ref="rtsOriginAlarm" />
    <!-- ratio of STA/LTA, default 10.0, -1: disable -->
    <property name="trigLevel" value="-1" />
    <!-- one second abs avg ACC value in gal -->
    <property name="galLevel" value="0.05" />
    <!-- Min trigger count of neighbors -->
    <property name="minTrigCount" value="3" />
    <property name="alarmFile" value="audio/danger.au" />
    <property name="excludeChannelRegex">
      <list>
      <!-- 
        <value>GY/.*/00/.*</value>
        -->
      </list>
    </property>
  </bean>
  <!-- 
  <jms:listener-container 
    container-type="default"
    connection-factory="connectionFactory" 
    destination-resolver="destinationResolver"
    destination-type="topic" 
    concurrency="1">
    <jms:listener id="pickListenerContainer" destination="rts.pick" ref="traceView" />
    <jms:listener id="locationListenerContainer" destination="rts.location" ref="traceView" />
  </jms:listener-container>
 -->
  

  <bean id="seedVolumeSSS" class="cn.org.gddsn.seis.evtformat.seed.SeedVolume">
    <property name="seedVolumePlugin" ref="seedVolumeSSSPlugin" />
  </bean>

  <bean id="seedVolumeSSSPlugin" class="cn.org.gddsn.seis.evtformat.seed.SeedVolumeSSSPlugin">
    <property name="seedVolumeService" ref="seedVolumeService" />
    <property name="sssPort" ref="sssPort" />

    <!-- 缓冲长度，就是显示的波形长度，单位秒 -->
    <property name="bufferLength" value="1200" />
  </bean>

  <jee:jndi-lookup id="seedVolumeService"
    jndi-name="ejb:JOPENSEAR/jopens-mega/SeedVolumeServiceBean!cn.org.gddsn.jopens.service.SeedVolumeService">
    <jee:environment>
      # The next line enable scoped EJB client context which will be tied to the JNDI context
      # jboss-ejb-client.properties is not needed.
      org.jboss.ejb.client.scoped.context=true
      java.naming.factory.url.pkgs=org.jboss.ejb.client.naming
      # embedded jboss-ejb-client.properties
      endpoint.name=client
      remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED=false
      remote.connections=default
      remote.connection.default.host=${jopens.wildfly.host}
      remote.connection.default.port=8080
      remote.connection.default.username=${jopens.wildfly.user}
      remote.connection.default.password=${jopens.wildfly.password}
    </jee:environment>
  </jee:jndi-lookup>

  <!-- 
  <bean id="seedVolumeService" class="org.springframework.jndi.JndiObjectFactoryBean"> 
    <property name="jndiTemplate" ref="jndiTemplate" />
    <property name="jndiName" value="ejb:JOPENSEAR/jopens-mega/SeedVolumeServiceBean!cn.org.gddsn.jopens.service.SeedVolumeService" />
  </bean>
  -->

  <!-- Spring JMS Template -->
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory">
      <ref local="jmsFactory" />
    </property>
    <property name="destinationResolver">
      <ref local="destinationResolver" />
    </property>
    <property name="pubSubDomain" value="true" />
  </bean>

  <!-- ConnectionFactory Definition -->
  <bean id="jmsFactory"
    class="org.springframework.jms.connection.CachingConnectionFactory"
    destroy-method="destroy">
    <constructor-arg ref="connectionFactory" />
  </bean>

  <bean id="destinationResolver"
    class="org.springframework.jms.support.destination.JndiDestinationResolver">
    <property name="jndiTemplate" ref="jndiTemplate" />
    <property name="cache" value="true" />
    <!-- do not create a dynamic destination if the destination name is not 
      found in JNDI -->
    <property name="fallbackToDynamicDestination" value="false" />
  </bean>


  <bean id="connectionFactory" class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
    <property name="targetConnectionFactory">
      <bean class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate" ref="jndiTemplate" />
        <property name="jndiName" value="jms/RemoteConnectionFactory" />
      </bean>
    </property>
    <property name="username" value="${jopens.wildfly.user}"/>
    <property name="password" value="${jopens.wildfly.password}"/>
  </bean>

  <bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
    <property name="environment">
      <props>
        <prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
        <prop key="java.naming.provider.url">http-remoting://${jopens.wildfly.host}:${jopens.wildfly.port}</prop>
        <prop key="java.naming.security.principal">${jopens.wildfly.user}</prop>
        <prop key="java.naming.security.credentials">${jopens.wildfly.password}</prop>
      </props>
    </property>
  </bean>

  <!-- 用于实时系统接收波形数据 -->
  <bean id="sssPort" class="cn.org.gddsn.sss.port.SSSPort"
    init-method="sendMiniSeedData">
    <property name="sssClient" ref="sssClient" />
    <property name="chanMask" value="${jopens.tv.chanMask}" />
    <property name="stationCode">
      <list>
        <value>${jopens.tv.stationCode}</value>
      </list>
    </property>
    <property name="reload" value="true" />
    <property name="second" value="360" />
  </bean>

  <!-- 用于实时系统接收波形数据 -->
  <bean id="sssClient" class="cn.org.gddsn.sss.client.SSSClient">
    <property name="baseURL" value="${jopens.tv.sss.baseURL}" />    
    <property name="user" value="${jopens.tv.sss.user}" />
    <property name="password" value="${jopens.tv.sss.password}" />
  </bean>
  
  <bean id="awsPlugin" class="cn.org.gddsn.jopens.service.ArchiveWaveServerPlugin">
    <property name="archiveWaveClient" ref="archiveWaveClient" />
  </bean>
  
  <bean id="archiveWaveClient" class="cn.org.gddsn.jopens.wfpool.ArchiveWaveClient">
    <property name="baseURL" value="${jopens.aws.baseURL}" />
  </bean>

  <bean id="rtsOriginAlarm" class="cn.org.gddsn.rts.RtsOriginAlarm">
    <!-- property name="comPortAlarm" ref="comPortAlarm" / -->
    <property name="alarmFile" value="audio/alarm.au" />
    <property name="minLat" value="-90" />
    <property name="maxLat" value="90" />
    <property name="minLon" value="-180" />
    <property name="maxLon" value="180" />
    <property name="minMag" value="3" />
    <property name="minStation" value="15" />
    <!-- 
    <property name="smsClient" ref="smsClient" />
    <property name="program" value="/usr/local/jopens/TraceView/shellAlarm.sh" />
    -->
  </bean>

  <!-- 用于港震的报警串口设备, 当有事件触发时， 发送声音报警 -->
  <!-- soundType is between 1 and 15 -->
  <!-- 
  <bean id="comPortAlarm" class="cn.org.gddsn.util.ComPortAlarm">
    <property name="comPort" value="COM1" />
    <property name="soundType" value="13" />
  </bean> 
  <bean id="smsClient" class="cn.org.gddsn.sms.SMSClient">
    <property name="sender" ref="senderByGW" />
  </bean>
  <bean id="senderByGW" class="cn.org.gddsn.sms.JassonGW"> 
    <property name="gateway" value="xxxxx" />
    <property name="user" value="xxxx" />
    <property name="password" value="xxxx" />
    <property name="dbName" value="xxx" />
    <property name="apiCode" value="xxx" />
  </bean>
  -->
  <!-- <bean id="senderByGW" class="cn.org.gddsn.sms.MeipGW"> </bean> -->
  <!-- <bean id="senderByGW" class="cn.org.gddsn.sms.CQSMSGW"> </bean> -->
</beans>

