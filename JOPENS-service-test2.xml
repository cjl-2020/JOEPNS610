<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
  default-lazy-init="true">
  <context:property-placeholder location="classpath:jopens-config610.properties" />

  <bean id="seedVolume" class="cn.org.gddsn.seis.evtformat.seed.SeedVolume">
    <property name="seedVolumePlugin" ref="seedVolumePlugin" />
  </bean>

  <bean id="seedVolumePlugin"
    class="cn.org.gddsn.seis.evtformat.seed.SeedVolumeDatabasePlugin">
    <property name="seedVolumeService" ref="seedVolumeJPAService" />
    <property name="archiveWaveServerPlugin" ref="awsPlugin" />
    <property name="waveformDataStore" ref="waveformDataStore" />
  </bean>

    <jee:jndi-lookup id="seedVolumeService"
    jndi-name="ejb:JOPENSEAR/jopens-mega/SeedVolumeServiceBean!cn.org.gddsn.jopens.service.SeedVolumeService">
	    <jee:environment>
	      # The next line enable scoped EJB client context which will be tied to the JNDI context
	      # jboss-ejb-client.properties is not needed.
	      org.jboss.ejb.client.scoped.context=true
	      java.naming.factory.url.pkgs=org.jboss.ejb.client.naming
	      # embedded jboss-ejb-client.properties
	      endpoint.name=client
	      remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED=false
	      remote.connections=default
	      remote.connection.default.host=${jopens.wildfly.host}
	      remote.connection.default.port=8080
	      remote.connection.default.username=${jopens.wildfly.user}
	      remote.connection.default.password=${jopens.wildfly.password}
	    </jee:environment>
  	</jee:jndi-lookup>

  <!-- Do NOT modify this bean id "archiveWaveServerPlugin" -->
  <bean id="awsPlugin" class="cn.org.gddsn.jopens.service.ArchiveWaveServerPlugin">
    <property name="archiveWaveClient" ref="archiveWaveClient" />
  </bean>

  <bean id="archiveWaveClient" class="cn.org.gddsn.jopens.wfpool.ArchiveWaveClient">
    <property name="baseURL" value="${jopens.aws.baseURL}" />
  </bean>

  <bean id="waveformDataStore" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url"
      value="jdbc:mysql://${jopens.mysql.host}/jopens?useUnicode=true&amp;characterEncoding=UTF-8" />
    <property name="username" value="${jopens.mysql.user}" />
    <property name="password" value="${jopens.mysql.password}" />
  </bean>
  
  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

  <bean id="seedVolumeJPAService" class="cn.org.gddsn.jopens.service.SeedVolumeJPAService">
    <property name="seedCache" ref="memorySeedCache" />
  </bean>

  <bean id="memorySeedCache" class="cn.org.gddsn.jopens.service.MemorySeedCache">
    <property name="local" ref="localSeedCache" />
  </bean>

  <bean id="localSeedCache" class="cn.org.gddsn.jopens.service.LocalSeedCache"> 
    <property name="prefix" value="${jopens.msdp.agency}.${jopens.mysql.host}" />
  </bean>

 <!--
  <bean id="localSeedCache" class="com.cjl.msdp610.GetLocalSeedCache"> 
    <property name="prefix" value="${jopens.msdp.agency}.${jopens.mysql.host}" />
  </bean>
  --> 
  <bean id="entityManagerFactory"
    class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="persistenceUnitName" value="jopens" />
    <property name="persistenceUnitManager">
      <bean id="persistenceUnitManager"
        class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="defaultDataSource" ref="dataSource" />

        <property name="persistenceXmlLocations">
          <list>
            <value>classpath*:/META-INF/persistence_resource_local.xml</value>
          </list>
        </property>

        <!-- Hibernate does not need it InstrumentationLoadTimeWeaver <property 
          name="loadTimeWeaver"> <bean class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver"/> 
          </property> -->
      </bean>
    </property>
    <property name="jpaVendorAdapter">
      <!-- hibernate JPA -->
      <bean
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="false" />
        <property name="generateDdl" value="false" />
        <property name="database" value="MYSQL" />
      </bean>

      <!-- TopLink JPA <bean class="org.sppenJPringframework.orm.jpa.vendor.TopLinkJpaVendorAdapter"> 
        <property name="showSql" value="true"/> <property name="generateDdl" value="true"/> 
        <property name="database" value="MYSQL" /> </bean> -->
      <!-- OpenJPA <bean class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter"> 
        <property name="showSql" value="true"/> <property name="generateDdl" value="true"/> 
        <property name="database" value="MYSQL" /> </bean> -->
    </property>

  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url"
      value="jdbc:mysql://${jopens.mysql.host}/jopens?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false" />
    <property name="username" value="${jopens.mysql.user}" />
    <property name="password" value="${jopens.mysql.password}" />
  </bean>


  <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
    <property name="dataSource" ref="dataSource" />
  </bean>

  <tx:advice id="txAdvice" transaction-manager="txManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- all methods starting with 'get' are read-only -->
      <tx:method name="get*" read-only="true" />
      <tx:method name="read*" read-only="true" />
      <tx:method name="find*" read-only="true" />
      <!-- other methods use the default transaction settings (see below) -->
      <tx:method name="*" propagation="REQUIRED" />
    </tx:attributes>
  </tx:advice>

  <aop:config>
    <aop:pointcut id="methods"
      expression="execution(* cn.org.gddsn.jopens.service.SeedVolumeJPAService.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="methods" />
  </aop:config>

  <bean id="localEQIM" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url"
      value="jdbc:mysql://${jopens.eqim.host}/gshare?useUnicode=true&amp;characterEncoding=GBK" /> <!-- &amp;jdbcCompliantTruncation=false -->
    <property name="username" value="${jopens.eqim.db.user}" />
    <property name="password" value="${jopens.eqim.db.password}" />
  </bean>
  
  <!-- 从统一编目服务器获取参考目录 -->
  <jee:jndi-lookup id="referenceCatalogService"
    jndi-name="ejb:JOPENSEAR/jopens-mega/CatalogServiceBean!cn.org.gddsn.jopens.service.CatalogService">
    <jee:environment>
      # The next line enable scoped EJB client context which will be tied to the JNDI context
      # jboss-ejb-client.properties is not needed.
      org.jboss.ejb.client.scoped.context=true
      java.naming.factory.url.pkgs=org.jboss.ejb.client.naming
      # embedded jboss-ejb-client.properties
      endpoint.name=client
      remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED=false
      remote.connections=default
      remote.connection.default.host=${jopens.bulletin.host}
      remote.connection.default.port=8080
      remote.connection.default.username=${jopens.bulletin.user}
      remote.connection.default.password=${jopens.bulletin.password}
    </jee:environment>
  </jee:jndi-lookup>
  
</beans>
